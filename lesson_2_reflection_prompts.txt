What happens when you initialize a repository? Why do you need to do it?
A repository is created , with .git hidden folder inside. I need it to keep track of mulltiple files related to my project.


How is the staging area different from the working directory and the repository?
What value do you think it offers?
It is the middle point between work directory and repo. Files before commit are stored in staging area.


How can you use the staging area to make sure you have one commit per logical
change?
We add only those files to the staging area which are part of the logical change. We commit changes and then add the next set of files to staging area.


What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
They will help me working simultaneously on 2 different features together.They will also help me keeping a working 
master branch while experimenting around.

How do the diagrams help you visualize the branch structure?
They help us get an idea that where were the branches separated, what is common to them, what commits are inaccesible and where were 
they mergeed again


What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
We can combine 2 features/bug fixes etc to our master branch and thus update our software with new changes that we did.
We represent it in that way because it is easier to understand and also solves confusion about parents and all.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?
